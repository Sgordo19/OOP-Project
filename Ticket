package Final_Project;

import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Scanner;

public class Ticket {
    private String ticketNumber;
    private String offenceCode;
    private String offenceDescription;
    private double fineAmount;
    private String vehiclePlateNumber;
    private Driver driver;
    private JCF_Officer officer;
    private String status; // "Paid" or "Unpaid"
    private Date issueDate;
    private Date dueDate;
    private Date courtDate;

    // Constructor
    public Ticket(String ticketNumber, Date issueDate, String offenceCode, String offenceDescription,
            float fineAmount, String vehiclePlateNumber, Driver driver, JCF_Officer officer,
            String status, Date dueDate, Date courtDate)  {
        this.ticketNumber = ticketNumber;
        this.offenceCode = offenceCode;
        this.offenceDescription = offenceDescription;
        this.fineAmount = fineAmount;
        this.issueDate = issueDate;
        this.dueDate = dueDate;
        this.status = "Unpaid"; // Default status
        this.courtDate = null; // Default court date (null if not escalated)
        this.driver = driver;
        this.officer = officer;
        this.vehiclePlateNumber = driver.getVehiclePlateNumber(); // Getting the vehicle plate number from Driver class
    }

    // Getter and Setter methods
    public String getTicketNumber() {
        return ticketNumber;
    }

    public String getOffenceCode() {
        return offenceCode;
    }

    public String getOffenceDescription() {
        return offenceDescription;
    }

    public double getFineAmount() {
        return fineAmount;
    }

    public Date getIssueDate() {
        return issueDate;
    }

    public Date getDueDate() {
        return dueDate;
    }

    public String getStatus() {
        return status;
    }

    public Date getCourtDate() {
        return courtDate;
    }

    public void setCourtDate(Date courtDate) {
        this.courtDate = courtDate;
    }

    public Driver getDriver() {
        return driver;
    }

    public void setDriver(Driver driver) {
        this.driver = driver;
    }

    public JCF_Officer getOfficer() {
        return officer;
    }

    public void setOfficer(JCF_Officer officer) {
        this.officer = officer;
    }

    public String getVehiclePlateNumber() {
        return vehiclePlateNumber;
    }

    public void setVehiclePlateNumber(String vehiclePlateNumber) {
        this.vehiclePlateNumber = vehiclePlateNumber;
    }

    // Methods

    // Pay the ticket
    public void payTicket() {
        if ("Paid".equalsIgnoreCase(this.status)) {
            System.out.println("Ticket already paid.");
        } else {
            this.status = "Paid";
            System.out.println("Ticket " + this.ticketNumber + " has been successfully paid.");
        }
    }

    // Check the ticket status
    public void checkTicketStatus() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        System.out.println("Ticket Status for " + ticketNumber + ":");
        System.out.println("Status: " + status);
        if ("Unpaid".equalsIgnoreCase(status) && dueDate.before(new Date())) {
            System.out.println("The ticket is overdue.");
            if (courtDate != null) {
                System.out.println("Court Date: " + dateFormat.format(courtDate));
            }
        } else if ("Unpaid".equalsIgnoreCase(status)) {
            System.out.println("Due Date: " + dateFormat.format(dueDate));
        }
    }

    // Issue the ticket (static method to create a new ticket)
    public static Ticket issueTicket(String ticketNumber, String offenceCode, String offenceDescription, 
            float fineAmount, Date issueDate, Driver driver, JCF_Officer officer, 
            int dueInDays, String status, Date courtDate) {
// Calculate due date by adding the specified number of days to the issue date
Date dueDate = new Date(issueDate.getTime() + (dueInDays * 24L * 60L * 60L * 1000L));

// Return a new Ticket with the correct parameters
return new Ticket(ticketNumber, issueDate, offenceCode, offenceDescription, fineAmount, 
 driver.getVehiclePlateNumber(), driver, officer, status, dueDate, courtDate);
}


    // Display ticket details
    public void displayTicketDetails() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        System.out.println("Ticket Number: " + ticketNumber);
        System.out.println("Offence Code: " + offenceCode);
        System.out.println("Description: " + offenceDescription);
        System.out.println("Fine Amount: $" + fineAmount);
        System.out.println("Issue Date: " + dateFormat.format(issueDate));
        System.out.println("Due Date: " + dateFormat.format(dueDate));
        System.out.println("Status: " + status);
        if (courtDate != null) {
            System.out.println("Court Date: " + dateFormat.format(courtDate));
        }
        System.out.println("---------------------------");
    }

    // Pay ticket method (with additional logic if necessary)
    public boolean payTicket(float paymentAmount) {
        if ("Paid".equalsIgnoreCase(this.status)) {
            System.out.println("Ticket already paid.");
            return true;
        }

        if (paymentAmount < fineAmount) {
            fineAmount -= paymentAmount;
            System.out.println("Payment accepted. Remaining balance: $" + fineAmount);
            return false;
        } else {
            fineAmount = 0;
            status = "Paid";
            System.out.println("Ticket fully paid.");
            return true;
        }
    }
}
