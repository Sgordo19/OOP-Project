package Final_Project;

public class Processing_Officer extends User{
	private String officerID;

	private Processing_Officer (String name, String trn, String dob, String address, String contact_number, String officerID)
	{
		super(name,trn,dob,address,contact_number);
		this.officerID = officerID;
	}
	
	public Processing_Officer (Processing_Officer pro)
	{
		super (pro);
		officerID = pro.officerID;
	}

	public String getOfficerID() {
		return officerID;
	}

	public void setOfficerID(String officerID) {
		this.officerID = officerID;
	}
 // Method to view outstanding tickets based on TRN instead of parish
    public static void viewOutstandingTicketsByTRN(Applicant applicant) {
        Scanner scanner = new Scanner(System.in);

        // Prompt user for TRN to filter by the applicant's TRN
        System.out.println("Enter the TRN to view outstanding tickets:");
        String trn = scanner.nextLine();

        // Simulate checking if the TRN matches and if the applicant has any outstanding tickets
        if (applicant.trn.equals(trn) && applicant.outstandingTickets) {
            System.out.println("\n--- Outstanding Tickets for TRN: " + trn + " ---");
            System.out.println("There are outstanding tickets that need to be paid before your application can be processed.");
        } else if (applicant.trn.equals(trn) && !applicant.outstandingTickets) {
            System.out.println("\n--- Outstanding Tickets for TRN: " + trn + " ---");
            System.out.println("There are no outstanding tickets for this TRN.");
        } else {
            System.out.println("No records found for TRN: " + trn);
        }
    }
}
   
