import java.util.Scanner;


public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); //Scanner object to read user input
        boolean exitSystem = false; //Controls when the main loop ends
        boolean inSystem;

        
        while (!exitSystem) // Continues loop until exitSystem is set to true
        {
            //Display Menu
            System.out.println("\n--- Ticketing Issuing and Offender Checking System (TIOCS) ---");
            System.out.println("Welcome to the Ticketing Issuing and Offender Checking System (TIOCS)");
            System.out.println("Please select an option:");
            System.out.println("1. Officer Login");
            System.out.println("2. Driver Menu");
            System.out.println("3. Exit");

            int choice = scanner.nextInt(); //Read's the user's input
            scanner.nextLine(); //Removes newline

            //// Switch case to handle the user's menu choice
            switch (choice) {
                case 1: // Officer Login
                    System.out.println("Enter Officer Username:");
                    String username = scanner.nextLine();
                    System.out.println("Enter Officer Password:");
                    String password = scanner.nextLine();
                    // Check if the entered credentials are correct
                    if (username.equals("admin") && password.equals("password123"))
                    {
                        //If credentials are correct, login is successful
                        System.out.println("Login successful. Welcome, Processing Officer!");
                        //// Call officer menu if login is successful
                        officerMenu(scanner);
                        inSystem = true;
                    } else {
                        // If credentials are incorrect, show an error message
                        System.out.println("Invalid username or password. Access denied.");
                    }
                    break;
              case 2: // Driver Menu
                    driverMenu(scanner); // If the user selects Driver Menu, call the driverMenu method 
                    break;

                case 3: // Exit System
                    // If the user selects exit, exit the loop
                    System.out.println("Thank you for using TIOCS. Goodbye!");
                    exitSystem = true; // Set exitSystem to true to break the loop
                    break;

                default:
                    // If the user enters an invalid choice, ask them to try again
                    System.out.println("Invalid choice. Please try again.");
                }
            }
            scanner.close(); // Close the scanner
            }

     private static void officerMenu(Scanner scanner) // Method for the Officer menu 
    {
        boolean exitOfficerMenu = false;

        while (!exitOfficerMenu) // Loop for processing officer menu 
        {
            // Display options
            System.out.println("\nProccesing Officer Menu: ");
            System.out.println("1. Create Application");
            System.out.println("2. Update Application");
            System.out.println("3. Delete Application");
            System.out.println("4. Exit Officer Menu");

            int officerChoice = scanner.nextInt(); // Get the officer's choice from the menu
            scanner.nextLine(); // Removes newline

            switch (officerChoice) // Switch case to handle the officer's selection
            {
                case 1: //Create Application
                    System.out.println("Creating application...");
                    System.out.println("Enter Applicant TRN:");
                    String trn = scanner.nextLine();
                    System.out.println("Enter Applicant Name:");
                    String name = scanner.nextLine();
                    System.out.println("Enter Applicant Date of Birth:");
                    String dob = scanner.nextLine();
                    System.out.println("Enter Applicant Address:");
                    String address = scanner.nextLine();
                    System.out.println("Enter Applicant Email:");
                    String email = scanner.nextLine();
                    System.out.println("Enter Applicant Contact Number:");
                    String contact_number = scanner.nextLine();
                    System.out.println("Has the applicant had any accidents in the past 2 years? (true/false):");
                    boolean accidents = scanner.nextBoolean();
                    System.out.println("Does the applicant have a negative police record? (true/false):");
                    boolean negativePoliceRecords = scanner.nextBoolean();
                    scanner.nextLine(); 

                    // Create a new object with the user's input
                    Applicant applicant1 = new Applicant(trn, name, dob, address, email, contact_number, accidents, negativePoliceRecords);

                    System.out.println("Application created successfully.");
                    applicant.displayDetails(); // Display applicant details

                break;

                  case 2:
                        // Update Applicant (needs adjustments)
                    public void updateApplicant(String trn, Applicant updatedApplicant) {
                    if (applicant.get(trn) == null) {
                        System.out.println("Applicant with TRN " + trn + " does not exist.");
                        } else 
                        {
                        applicant.put(trn, updatedApplicant);
                        System.out.println("Applicant with TRN " + trn + " has been updated.");
                        }
                        }
                break;

                   case 3: // Delete Applicant
                    public void deleteApplicant(String trn) {
                        if (applicants.remove(trn) != null) {
                    System.out.println("Applicant with TRN " + trn + " has been deleted.");
                        } else {
                    System.out.println("Applicant with TRN " + trn + " not found.");
                }
                }
                break;

                case 4:
                // Reject Applicant
                public boolean rejectApplicant(String trn) {
                Applicant applicant = applicants.get(trn);
                if (applicant != null) {
                applicant.setStatus("Rejected");
                System.out.println("Applicant with TRN " + trn + " has been rejected.");
                return true;
                } else {
                System.out.println("Applicant with TRN " + trn + " not found.");
                return false;
            }
        }
                break;

                case 5:// Approve Applicant
                public boolean approveApplicant(String trn) {
            Applicant applicant = applicants.get(trn);
            if (applicant != null) {
            if (applicant.isEligibleForApproval()) {
                applicant.setStatus("Approved");
                System.out.println("Applicant with TRN " + trn + " has been approved.");
                return true;
            } else {
                System.out.println("Applicant with TRN " + trn + " does not meet the criteria for approval.");
                return false;
                }
            } else {
            System.out.println("Applicant with TRN " + trn + " not found.");
            return false;
            }
        }

default: 
 System.out.println("Invalid choice, please try again.");

                    break;
                    
        

