public class Driver extends User {
    private String outstandingTickets; // A Ticket object
    private boolean Warrants; // A boolean value for Warrants
    
    // Constructor
    public Driver(String name, String trn, String dob, String address, String contact_number, 
                  String outstandingTickets, boolean Warrants) {
        super(name, trn, dob, address, contact_number); // Calling the User constructor
        this.outstandingTickets = outstandingTickets;
        this.Warrants = Warrants;
    }

    // Constructor for copying Driver object
    private Driver(Driver Driv) {
        super(Driv);
        outstandingTickets = Driv.outstandingTickets;
        Warrants = Driv.Warrants;
    }

	public void payticket(String ticketNumber) 
	{
        Ticket ticket = findTicketByNumber(ticketNumber);
        if (ticket == null) 
	{
            System.out.println("Ticket not found.");
        } else if (ticket.isPastDue()) 
	{
            System.out.println("Payment cannot be made. The ticket is past due.");
        } else if ("Paid".equalsIgnoreCase(ticket.getStatus())) 
	{
            System.out.println("Ticket has already been paid.");
        } else 
	{
            ticket.setStatus("Paid");
            System.out.println("Payment successful for ticket: " + ticketNumber);
        }
    	}
	// toString() method to print the Driver's details
    @Override 
    public String toString () {
        return "The outstanding Tickets are: " + outstandingTickets + "Warrants? " + Warrants + "\n"; 
    } 
}
